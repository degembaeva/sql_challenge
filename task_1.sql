/*Создание таблицы */

CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8,2),
    amount INT
)

/*Вставка записи в таблицу*/

INSERT INTO book(title, author, price, amount) 
    VALUES('Белая гвардия', 'Булгаков М.А.', 540.50, 5),
    ('Идиот', 'Достоевский Ф.М.', 460.00, 10),
    ('Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2)
    
    
/*Задание1
Для упаковки каждой книги требуется один лист бумаги, 
цена которого 1 рубль 65 копеек. Посчитать стоимость упаковки для каждой книги 
(сколько денег потребуется, чтобы упаковать все экземпляры книги). 
В запросе вывести название книги, ее количество и стоимость упаковки, последний столбец назвать pack.*/

SELECT title, amount, 1.65 * amount as pack FROM book
 
/*Задание2
 В конце года цену каждой книги на складе пересчитывают – снижают ее на 30%. 
 Написать SQL запрос, который из таблицы book выбирает названия, авторов, количества и вычисляет 
 новые цены книг. Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.*/
 
 SELECT title, author, amount, 
    ROUND((price*0.7),2) AS new_price
FROM book;

/*Пример
Для каждой книги из таблицы book установим скидку следующим образом: если количество книг меньше 4, 
то скидка будет составлять 50% от цены, в противном случае 30%.*/
  
SELECT title, amount, price, 
    ROUND(IF(amount<4, price*0.5, price*0.7),2) AS sale
FROM book

/*Пример
Усложним вычисление скидки в зависимости от количества книг. Если количество книг меньше 4 , 
то скидка составляет 50%, для остальных книг, количество которых меньше 11, скидка 30%, 
для всех оставшихся – 10%. И еще укажем какая именно скидка на каждую книгу.*/


SELECT title, amount, price,
    ROUND(
     IF(amount < 4, price * 0.5, 
         IF(amount < 11, price * 0.7, price * 0.9)),
     2) AS sale,
    IF(amount < 4, 'скидка 50%', 
      IF(amount < 11, 'скидка 30%', 'скидка 10%')
     ) AS Ваша_скидка
FROM book;

/*Задача 
При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, 
на втором месте книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, 
а цену книг Есенина - на 5%. Написать запрос, куда включить автора, название книги и новую цену, 
последний столбец назвать new_price. Значение округлить до двух знаков после запятой.*/

SELECT author, title,
        ROUND(
            price * IF(author = 'Булгаков М.А.', 1.1,
                    IF(author = 'Есенин С.А.', 1.05, 1)), 2) as new_price FROM book
                    
 

/*Возможная проблема: синтаксис IF
Конструкция IF(condition, true_result, false_result) — это MySQL-специфичная форма.

Если вы используете, скажем, PostgreSQL или SQL Server, то надо заменить IF на CASE.*/


/*Задача 
Вывести автора, название  и цены тех книг, количество которых меньше 10.*/


SELECT author, title, price FROM book
WHERE amount < 10


/*Задача 
Вывести название, автора,  цену  и количество всех книг, 
цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.*/


SELECT title, author, price, amount FROM book
WHERE (price < 500 OR price > 600) AND price*amount >= 5000



/*Логическое выражение после ключевого слова WHERE может включать операторы  BETWEEN и IN. 
Приоритет  у этих операторов такой же как у операторов сравнения, то есть они выполняются раньше, чем NOT, AND, OR.

Оператор BETWEEN позволяет отобрать данные, относящиеся к некоторому интервалу, включая его границы.*/

/*Пример

Выбрать названия и количества тех книг, количество которых от 5 до 14 включительно.*/


SELECT title, amount 
FROM book
WHERE amount BETWEEN 5 AND 14;*/


/*Оператор  IN  позволяет выбрать данные, соответствующие значениям из списка.*/

/*Пример

Выбрать названия и цены книг, написанных Булгаковым или Достоевским.*/

SELECT title, price 
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');


/*Задание
Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),
а количество или 2, или 3, или 5, или 7 .*/


SELECT title, author FROM book
WHERE (price BETWEEN 540.50 AND 800) AND amount IN(2,3,5,7);

/*Пример

Вывести название, автора и цены книг. Информацию  отсортировать по названиям книг в алфавитном порядке.*/

SELECT title, author, price
FROM book
ORDER BY title;

/*Аналогичный результат получится при использовании запроса*/

SELECT title, author, price
FROM book
ORDER BY 1;


/*Пример
Вывести автора, название и количество книг, в отсортированном в алфавитном порядке по автору и 
по убыванию количества, для тех книг, цены которых меньше 750 рублей.*/


SELECT author, title, amount AS Количество
FROM book
WHERE price < 750
ORDER BY author, amount DESC;


/*Задание
Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 
(включая границы). Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), 
а затем по названиям книг (по алфавиту).*/

SELECT author, title FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title ASC


/*Выборка данных, оператор LIKE
Оператор LIKE используется для сравнения строк. В отличие от операторов отношения равно (=) и не равно (<>), 
LIKE позволяет сравнивать строки не на полное совпадение (не совпадение), а в соответствии с шаблоном. 
Шаблон может включать обычные символы и символы-шаблоны. При сравнении с шаблоном, его обычные символы 
должны в точности совпадать с символами, указанными в строке. Символы-шаблоны могут совпадать с произвольными элементами символьной строки.
%	-> Любое количество любых символов
_ -> Ровно один любой символ*/


/*Пример
Вывести названия книг, начинающихся с буквы «Б».*/
SELECT title FROM book
WHERE title LIKE 'Б%';

/*Пример
Вывести название книг, состоящих ровно из 5 букв.*/

SELECT title FROM book 
WHERE title LIKE "_____"









